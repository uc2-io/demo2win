apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  name: acs-token-secret-job
  namespace: rhacs-operator
spec:
  template:
    spec:
      containers:
        - image: quay.io/pittar/tekton-oc-toolbox:latest
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: central-htpasswd
                  key: password
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash

              # If secret already exists, don't regenerate.

              if [[ -n `oc get secret roxsecrets -n nodejs-web-app-pipelines 2>/dev/null` ]] ;
              then

                  echo "rhacs-operator token secret already exists in nodejs-web-app-pipelines."

                  exit 0

              fi

              # Wait for central to be ready

              attempt_counter=0

              max_attempts=20

              echo "Waiting for central to be available..."
              CENTRAL_URL="`oc -n rhacs-operator get route central -o go-template='{{.spec.host}}'`"
              echo "central url: https://$CENTRAL_URL"
              until $(curl -k --output /dev/null --silent --head --fail "https://$CENTRAL_URL"); do

                  if [ ${attempt_counter} -eq ${max_attempts} ];then
                    echo "Max attempts reached"
                    exit 1
                  fi

                  printf '.'
                  attempt_counter=$(($attempt_counter+1))
                  echo "Made attempt $attempt_counter, waiting..."
                  sleep 10
              done

              

              API_ENDPOINT="/v1/apitokens/generate"

              CENTRAL_URL_API="https://$CENTRAL_URL$API_ENDPOINT"

              echo "$CENTRAL_URL_API"

              PAYLOAD="{\"name\": \"nodejs-web-app-pipelines\", \"role\": \"Continuous Integration\"}"

              echo "$PAYLOAD"

              echo "Generate new token."

              RESPONSE=$(curl -k \
                -X POST -u "admin:$PASSWORD" \
                -H "Content-Type: application/json" \
                --data "$PAYLOAD" \
                $CENTRAL_URL_API)

              echo "$RESPONSE"

              TOKEN=$(jq -r '.token' <<< "$RESPONSE")

              echo "$TOKEN"

              # Create secret in target namespace.

              oc create secret generic roxsecrets \
                --from-literal=rox_central_endpoint=$CENTRAL_URL:443 \
                --from-literal=rox_api_token=$TOKEN \
                -n nodejs-web-app-pipelines

          imagePullPolicy: Always
          name: acs-token-secret-job
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: pipeline
      serviceAccountName: pipeline
      terminationGracePeriodSeconds: 30